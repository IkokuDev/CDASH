generator client {
  provider = "prisma-client-js"
}

// schema.prisma

datasource db {
  provider = "postgresql" // or mysql/sqlite depending on your setup
  url      = env("DATABASE_URL")
}



model Asset {
  id                  String   @id @default(cuid())
  name                String
  type                AssetType
  acquired            DateTime
  cost                Float
  status              AssetStatus
  summary             String
  purpose             String
  technicalDetails    String
  subCategory         String
  recurrentExpenditure Float?
  aiSummary           String?
  imageUrl            String?
  ownerId             String?   // link to Staff or Organization if needed
  organizationId      String?
  organization        Organization? @relation(fields: [organizationId], references: [id])

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Staff {
  id                  String   @id @default(cuid())
  name                String
  position            String
  joined              DateTime
  experience          String
  salary              Float
  qualificationsScore Int
  bio                 String
  avatar              String
  role                String
  email               String   @unique
  organizationId      String?
  organization        Organization? @relation(fields: [organizationId], references: [id])

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model AppUser {
  uid             String   @id
  email           String?
  displayName     String?
  photoURL        String?
  organizationId  String?
  organization    Organization? @relation(fields: [organizationId], references: [id])
  role            UserRole?     @default(Member)

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Organization {
  id          String         @id @default(cuid())
  name        String
  address     String
  logoUrl     String?
  turnovers   Turnover[]
  assets      Asset[]
  staff       Staff[]
  users       AppUser[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Turnover {
  id              String         @id @default(cuid())
  year            Int
  amount          Float
  organizationId  String
  organization    Organization @relation(fields: [organizationId], references: [id])

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum AssetType {
  Software
  Hardware
  Connectivity
  Other
}

enum AssetStatus {
  Active
  Maintenance
  Decommissioned
}

enum UserRole {
  Admin
  Member
}
