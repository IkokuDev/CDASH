
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Staff {
  id                  String       @id @default(uuid())
  name                String
  position            String
  joined_date         DateTime     @map("joined_date")
  experience          Int
  salary              Float
  qualifications_score Int         @map("qualifications_score")
  bio                 String?
  created_at          DateTime     @default(now()) @map("created_at")
  updated_at          DateTime     @updatedAt @map("updated_at")
  user                Users?       @relation(fields: [user_id], references: [id])
  user_id             String?      @unique @map("user_id")
  assignments         Assignments[]
  audit_logs          AuditLogs[]

  @@map("staff")
}

model Assets {
  id                      String       @id @default(uuid())
  name                    String
  type                    String
  summary                 String?
  acquired                DateTime
  cost                    Float
  currency                String       @default("NGN")
  exchange_rate           Float?       @map("exchange_rate")
  cost_in_naira           Float?       @map("cost_in_naira")
  status                  String
  purpose                 String?
  technical_details       String?      @map("technical_details")
  sub_category            String?      @map("sub_category")
  recurrent_expenditure   Float?       @map("recurrent_expenditure")
  recurrent_currency      String?      @default("NGN") @map("recurrent_currency")
  recurrent_exchange_rate Float?       @map("recurrent_exchange_rate")
  recurrent_in_naira      Float?       @map("recurrent_in_naira")
  ai_summary              String?      @map("ai_summary")
  image_url               String?      @map("image_url")
  created_at              DateTime     @default(now()) @map("created_at")
  updated_at              DateTime     @updatedAt @map("updated_at")
  assignments             Assignments[]
  audit_logs              AuditLogs[]

  @@map("assets")
}

model Departments {
  id          String       @id @default(uuid())
  name        String
  description String?
  created_at  DateTime     @default(now()) @map("created_at")
  updated_at  DateTime     @updatedAt @map("updated_at")
  assignments Assignments[]

  @@map("departments")
}

model Locations {
  id          String       @id @default(uuid())
  name        String
  address     String?
  created_at  DateTime     @default(now()) @map("created_at")
  updated_at  DateTime     @updatedAt @map("updated_at")
  assignments Assignments[]

  @@map("locations")
}

model Assignments {
  id            String       @id @default(uuid())
  asset_id      String       @map("asset_id")
  staff_id      String?      @map("staff_id")
  department_id String?      @map("department_id")
  location_id   String?      @map("location_id")
  assigned_date DateTime     @map("assigned_date")
  return_date   DateTime?    @map("return_date")
  created_at    DateTime     @default(now()) @map("created_at")
  updated_at    DateTime     @updatedAt @map("updated_at")
  asset         Assets       @relation(fields: [asset_id], references: [id])
  staff         Staff?       @relation(fields: [staff_id], references: [id])
  department    Departments? @relation(fields: [department_id], references: [id])
  location      Locations?   @relation(fields: [location_id], references: [id])

  @@map("assignments")
}

model Users {
  id              String       @id @default(uuid())
  username        String       @unique
  email           String       @unique
  password_hash   String       @map("password_hash")
  role            String
  last_login      DateTime?    @map("last_login")
  created_at      DateTime     @default(now()) @map("created_at")
  updated_at      DateTime     @updatedAt @map("updated_at")
  staff           Staff?
  audit_logs      AuditLogs[]

  @@map("users")
}

model AuditLogs {
  id         String    @id @default(uuid())
  user_id    String?   @map("user_id")
  staff_id   String?   @map("staff_id")
  asset_id   String?   @map("asset_id")
  action     String
  details    String?
  timestamp  DateTime  @default(now())
  created_at DateTime  @default(now()) @map("created_at")
  updated_at DateTime  @updatedAt @map("updated_at")
  user       Users?    @relation(fields: [user_id], references: [id])
  staff      Staff?    @relation(fields: [staff_id], references: [id])
  asset      Assets?   @relation(fields: [asset_id], references: [id])

  @@map("audit_logs")
}

model OrganizationProfile {
  id         String    @id @default(uuid())
  name       String
  address    String?
  logo_url   String?   @map("logo_url")
  created_at DateTime  @default(now()) @map("created_at")
  updated_at DateTime  @updatedAt @map("updated_at")
  turnovers  Turnovers[]

  @@map("organization_profile")
}

model Turnovers {
  id         String    @id @default(uuid())
  year       Int
  amount     Float
  org_id     String    @map("org_id")
  created_at DateTime  @default(now()) @map("created_at")
  updated_at DateTime  @updatedAt @map("updated_at")
  organization OrganizationProfile @relation(fields: [org_id], references: [id])

  @@map("turnovers")
}
